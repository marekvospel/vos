//! # Monocraft font
//! This module includes the monocraft font in bitmap format.
//! The original font can be found at https://github.com/IdreesInc/Monocraft
//!
//! This module is licensed under SIL Open Font License 1.1
//! Copyright (c) 2022, Idrees Hassan (https://github.com/IdreesInc/Monocraft)

// Bits are reversed

const LETTER_CAPITAL_A: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0100010_0111110_0100010_0011100;
const LETTER_CAPITAL_B: u64 =
    0b0000000_0000000_0011110_0100010_0100010_0100010_0011110_0100010_0011110;
const LETTER_CAPITAL_C: u64 =
    0b0000000_0000000_0011100_0100010_0000010_0000010_0000010_0100010_0011100;
const LETTER_CAPITAL_D: u64 =
    0b0000000_0000000_0011110_0100010_0100010_0100010_0100010_0100010_0011110;
const LETTER_CAPITAL_E: u64 =
    0b0000000_0000000_0111110_0000010_0000010_0000010_0001110_0000010_0111110;
const LETTER_CAPITAL_F: u64 =
    0b0000000_0000000_0000010_0000010_0000010_0000010_0001110_0000010_0111110;
const LETTER_CAPITAL_G: u64 =
    0b0000000_0000000_0011100_0100010_0100010_0100010_0110010_0000010_0111100;
const LETTER_CAPITAL_H: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0100010_0111110_0100010_0100010;
const LETTER_CAPITAL_I: u64 =
    0b0000000_0000000_0011100_0001000_0001000_0001000_0001000_0001000_0011100;
const LETTER_CAPITAL_J: u64 =
    0b0000000_0000000_0011100_0100010_0100000_0100000_0100000_0100000_0100000;
const LETTER_CAPITAL_K: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0010010_0001110_0010010_0100010;
const LETTER_CAPITAL_L: u64 =
    0b0000000_0000000_0111110_0000010_0000010_0000010_0000010_0000010_0000010;
const LETTER_CAPITAL_M: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0100010_0101010_0110110_0100010;
const LETTER_CAPITAL_N: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0110010_0101010_0100110_0100010;
const LETTER_CAPITAL_O: u64 =
    0b0000000_0000000_0011100_0100010_0100010_0100010_0100010_0100010_0011100;
const LETTER_CAPITAL_P: u64 =
    0b0000000_0000000_0000010_0000010_0000010_0000010_0011110_0100010_0011110;
const LETTER_CAPITAL_Q: u64 =
    0b0000000_0000000_0101100_0010010_0100010_0100010_0100010_0100010_0011100;
const LETTER_CAPITAL_R: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0100010_0011110_0100010_0011110;
const LETTER_CAPITAL_S: u64 =
    0b0000000_0000000_0011100_0100010_0100000_0100000_0011100_0000010_0111100;
const LETTER_CAPITAL_T: u64 =
    0b0000000_0000000_0001000_0001000_0001000_0001000_0001000_0001000_0111110;
const LETTER_CAPITAL_U: u64 =
    0b0000000_0000000_0011100_0100010_0100010_0100010_0100010_0100010_0100010;
const LETTER_CAPITAL_V: u64 =
    0b0000000_0000000_0001000_0010100_0010100_0100010_0100010_0100010_0100010;
const LETTER_CAPITAL_W: u64 =
    0b0000000_0000000_0100010_0110110_0101010_0100010_0100010_0100010_0100010;
const LETTER_CAPITAL_X: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0010100_0001000_0010100_0100010;
const LETTER_CAPITAL_Y: u64 =
    0b0000000_0000000_0001000_0001000_0001000_0001000_0001000_0010100_0100010;
const LETTER_CAPITAL_Z: u64 =
    0b0000000_0000000_0111110_0000010_0000100_0001000_0010000_0100000_0111110;
const LETTER_SMALL_A: u64 =
    0b0000000_0000000_0111100_0100010_0111100_0100000_0011100_0000000_0000000;
const LETTER_SMALL_B: u64 =
    0b0000000_0000000_0011110_0100010_0100010_0100110_0011010_0000010_0000010;
const LETTER_SMALL_C: u64 =
    0b0000000_0000000_0011100_0100010_0000010_0100010_0011100_0000000_0000000;
const LETTER_SMALL_D: u64 =
    0b0000000_0000000_0111100_0100010_0100010_0110010_0101100_0100000_0100000;
const LETTER_SMALL_E: u64 =
    0b0000000_0000000_0111100_0000010_0111110_0100010_0011100_0000000_0000000;
const LETTER_SMALL_F: u64 =
    0b0000000_0000000_0001000_0001000_0001000_0001000_0011100_0001000_0110000;
const LETTER_SMALL_G: u64 =
    0b0000000_0011110_0100000_0111100_0100010_0100010_0111100_0000000_0000000;
const LETTER_SMALL_H: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0100110_0011010_0000010_0000010;
const LETTER_SMALL_I: u64 =
    0b0000000_0000000_0110000_0001000_0001000_0001000_0001100_0000000_0001000;
const LETTER_SMALL_J: u64 =
    0b0000000_0011100_0100010_0100010_0100000_0100000_0100000_0000000_0100000;
const LETTER_SMALL_K: u64 =
    0b0000000_0000000_0010010_0001010_0000110_0001010_0010010_0000010_0000010;
const LETTER_SMALL_L: u64 =
    0b0000000_0000000_0110000_0001000_0001000_0001000_0001000_0001000_0001100;
const LETTER_SMALL_M: u64 =
    0b0000000_0000000_0100010_0100010_0101010_0101010_0010110_0000000_0000000;
const LETTER_SMALL_N: u64 =
    0b0000000_0000000_0100010_0100010_0100010_0100010_0011110_0000000_0000000;
const LETTER_SMALL_O: u64 =
    0b0000000_0000000_0011100_0100010_0100010_0100010_0011100_0000000_0000000;
const LETTER_SMALL_P: u64 =
    0b0000000_0000010_0000010_0011110_0100010_0100110_0011010_0000000_0000000;
const LETTER_SMALL_Q: u64 =
    0b0000000_0100000_0100000_0111100_0100010_0110010_0101100_0000000_0000000;
const LETTER_SMALL_R: u64 =
    0b0000000_0000000_0000010_0000010_0000010_0100110_0011010_0000000_0000000;
const LETTER_SMALL_S: u64 =
    0b0000000_0000000_0011110_0100000_0011100_0000010_0111100_0000000_0000000;
const LETTER_SMALL_T: u64 =
    0b0000000_0000000_0110000_0001000_0001000_0001000_0011100_0001000_0001000;
const LETTER_SMALL_U: u64 =
    0b0000000_0000000_0111100_0100010_0100010_0100010_0100010_0000000_0000000;
const LETTER_SMALL_V: u64 =
    0b0000000_0000000_0001000_0010100_0100010_0100010_0100010_0000000_0000000;
const LETTER_SMALL_W: u64 =
    0b0000000_0000000_0111100_0101010_0101010_0100010_0100010_0000000_0000000;
const LETTER_SMALL_X: u64 =
    0b0000000_0000000_0100010_0010100_0001000_0010100_0100010_0000000_0000000;
const LETTER_SMALL_Y: u64 =
    0b0000000_0011110_0100000_0111100_0100010_0100010_0100010_0000000_0000000;
const LETTER_SMALL_Z: u64 =
    0b0000000_0000000_0111110_0000100_0001000_0010000_0111110_0000000_0000000;
const NUMBER_ZERO: u64 = 0b0000000_0000000_0011100_0100010_0100110_0101010_0110010_0100010_0011100;
const NUMBER_ONE: u64 = 0b0000000_0000000_0111110_0001000_0001000_0001000_0001000_0001100_0001000;
const NUMBER_TWO: u64 = 0b0000000_0000000_0111110_0100010_0000100_0011000_0100000_0100010_0011100;
const NUMBER_THREE: u64 = 0b0000000_0000000_0011100_0100010_0100000_0011000_0100000_0100010_0011100;
const NUMBER_FOUR: u64 = 0b0000000_0000000_0100000_0100000_0111110_0100010_0100100_0101000_0110000;
const NUMBER_FIVE: u64 = 0b0000000_0000000_0011100_0100010_0100000_0100000_0011110_0000010_0111110;
const NUMBER_SIX: u64 = 0b0000000_0000000_0011100_0100010_0100010_0011110_0000010_0000100_0011000;
const NUMBER_SEVEN: u64 = 0b0000000_0000000_0001000_0001000_0001000_0010000_0100000_0100010_0111110;
const NUMBER_EIGHT: u64 = 0b0000000_0000000_0011100_0100010_0100010_0011100_0100010_0100010_0011100;
const NUMBER_NINE: u64 = 0b0000000_0000000_0001100_0010000_0100000_0111100_0100010_0100010_0011100;
const SYMBOL_COMMA: u64 = 0b0000000_0000010_0000100_0000000_0000000_0000000_0000000_0000000_0000000;
const SYMBOL_LEFT_SQUARE_BRACKET: u64 =
    0b0000000_0000000_0011100_0000100_0000100_0000100_0000100_0000100_0011100;
const SYMBOL_RIGHT_SQUARE_BRACKET: u64 =
    0b0000000_0000000_0011100_0010000_0010000_0010000_0010000_0010000_0011100;
const SYMBOL_EXCLAMATION_MARK: u64 =
    0b0000000_0000000_0001000_0000000_0001000_0001000_0001000_0001000_0001000;
const LETTER_SPACE: u64 = 0;
const REPLACEMENT_CHARACTER: u64 =
    0b0000000_0001000_0010100_0111110_1110111_1101111_0100010_0011100_0001000;

pub fn resolve_letter(letter: char) -> u64 {
    match letter {
        'A' => LETTER_CAPITAL_A,
        'B' => LETTER_CAPITAL_B,
        'C' => LETTER_CAPITAL_C,
        'D' => LETTER_CAPITAL_D,
        'E' => LETTER_CAPITAL_E,
        'F' => LETTER_CAPITAL_F,
        'G' => LETTER_CAPITAL_G,
        'H' => LETTER_CAPITAL_H,
        'I' => LETTER_CAPITAL_I,
        'J' => LETTER_CAPITAL_J,
        'K' => LETTER_CAPITAL_K,
        'L' => LETTER_CAPITAL_L,
        'M' => LETTER_CAPITAL_M,
        'N' => LETTER_CAPITAL_N,
        'O' => LETTER_CAPITAL_O,
        'P' => LETTER_CAPITAL_P,
        'Q' => LETTER_CAPITAL_Q,
        'R' => LETTER_CAPITAL_R,
        'S' => LETTER_CAPITAL_S,
        'T' => LETTER_CAPITAL_T,
        'U' => LETTER_CAPITAL_U,
        'V' => LETTER_CAPITAL_V,
        'W' => LETTER_CAPITAL_W,
        'X' => LETTER_CAPITAL_X,
        'Y' => LETTER_CAPITAL_Y,
        'Z' => LETTER_CAPITAL_Z,
        'a' => LETTER_SMALL_A,
        'b' => LETTER_SMALL_B,
        'c' => LETTER_SMALL_C,
        'd' => LETTER_SMALL_D,
        'e' => LETTER_SMALL_E,
        'f' => LETTER_SMALL_F,
        'g' => LETTER_SMALL_G,
        'h' => LETTER_SMALL_H,
        'i' => LETTER_SMALL_I,
        'j' => LETTER_SMALL_J,
        'k' => LETTER_SMALL_K,
        'l' => LETTER_SMALL_L,
        'm' => LETTER_SMALL_M,
        'n' => LETTER_SMALL_N,
        'o' => LETTER_SMALL_O,
        'p' => LETTER_SMALL_P,
        'q' => LETTER_SMALL_Q,
        'r' => LETTER_SMALL_R,
        's' => LETTER_SMALL_S,
        't' => LETTER_SMALL_T,
        'u' => LETTER_SMALL_U,
        'v' => LETTER_SMALL_V,
        'w' => LETTER_SMALL_W,
        'x' => LETTER_SMALL_X,
        'y' => LETTER_SMALL_Y,
        'z' => LETTER_SMALL_Z,
        '0' => NUMBER_ZERO,
        '1' => NUMBER_ONE,
        '2' => NUMBER_TWO,
        '3' => NUMBER_THREE,
        '4' => NUMBER_FOUR,
        '5' => NUMBER_FIVE,
        '6' => NUMBER_SIX,
        '7' => NUMBER_SEVEN,
        '8' => NUMBER_EIGHT,
        '9' => NUMBER_NINE,
        ',' => SYMBOL_COMMA,
        '!' => SYMBOL_EXCLAMATION_MARK,
        '[' => SYMBOL_LEFT_SQUARE_BRACKET,
        ']' => SYMBOL_RIGHT_SQUARE_BRACKET,
        ' ' => LETTER_SPACE,
        _ => REPLACEMENT_CHARACTER,
    }
}
